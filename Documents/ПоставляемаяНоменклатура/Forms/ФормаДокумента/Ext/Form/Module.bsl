&НаКлиенте
Процедура ПоставкаЦенаПриИзменении(Элемент)
    СТЧ = Элементы.Поставка.ТекущиеДанные;
    РасчетСуммыВДокументе.РасчетСуммы(СТЧ);
КонецПроцедуры

&НаКлиенте
Процедура ПоставкаКоличествоПриИзменении(Элемент)
    СТЧ = Элементы.Поставка.ТекущиеДанные;
    РасчетСуммыВДокументе.РасчетСуммы(СТЧ);
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
    СТЧ = Элементы.Поставка.ТекущиеДанные;
    Для Каждого СТЧ Из Объект.Поставка Цикл   
        РасчетСуммыВДокументе.РасчетСуммы(СТЧ);
    КонецЦикла
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
    СТЧ = Элементы.Поставка.ТекущиеДанные;
    Объект.Итого = Объект.Поставка.Итог("Сумма");
КонецПроцедуры

&НаКлиенте
Процедура ПоставкаНоменклатураПриИзменении(Элемент)
    СТЧ = Элементы.Поставка.ТекущиеДанные;       
    РасчетСуммыВДокументе.РасчетСуммы(СТЧ);
КонецПроцедуры

&НаКлиенте
Процедура Выгрузить(Команда)
    ТекстДляВыгрузки = СформироватьТекстДляВыгрузкиНаСервере();
    
    Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
    Диалог.Заголовок = "Сохранить файл";
    Диалог.Фильтр = "Текстовые файлы (*.txt)|*.txt";
    
    ИмяФайлаПоУмолчанию = Объект.Номер + "_Выгрузка.txt";
    Диалог.ПолноеИмяФайла = ИмяФайлаПоУмолчанию;
    
    Если Диалог.Выбрать() Тогда
        ВыбранныйФайл = Диалог.ПолноеИмяФайла;
        
        Попытка
            Расширение = нРег(Прав(ВыбранныйФайл, 4));
            
            Если Расширение = ".txt" Тогда
                СохранитьВTXT(ВыбранныйФайл, ТекстДляВыгрузки);
            КонецЕсли;
            
            Сообщить("Файл сохранен: " + ВыбранныйФайл);
        Исключение
            Сообщить("Ошибка: " + ОписаниеОшибки());
        КонецПопытки;
    КонецЕсли;
КонецПроцедуры

Функция СформироватьТекстДляВыгрузкиНаСервере()
    ТабличнаяЧасть = Объект.Поставка;
    Если ТабличнаяЧасть.Количество() = 0 Тогда
        Возврат "";
    КонецЕсли;
    
    Заголовки = "Номенклатура;Единица измерения;Количество;Цена;Сумма";
    Результат = Заголовки + "
    |";
    
    Для Каждого Строка Из ТабличнаяЧасть Цикл
        Результат = Результат + 
            Строка(Строка.Номенклатура) + ";" +
            Строка(Строка.ЕдиницаИзмерения) + ";" +
            Формат(Строка.Количество, "ЧГ=0") + ";" +
            Формат(Строка.Цена, "ЧДЦ=2") + ";" +
            Формат(Строка.Сумма, "ЧДЦ=2") + "
    |";
    КонецЦикла;
    
    Возврат Результат;
КонецФункции

&НаКлиенте
Процедура СохранитьВTXT(Путь, Данные)
    ЗаписьТекста = Новый ЗаписьТекста(Путь);
    ЗаписьТекста.ЗаписатьСтроку(Данные);
    ЗаписьТекста.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
    Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
    Диалог.Заголовок = "Выберите файл для загрузки";
    Диалог.Фильтр = "Текстовые файлы (*.txt)|*.txt";
    
    Если Диалог.Выбрать() Тогда
        ВыбранныйФайл = Диалог.ПолноеИмяФайла;
        
        Попытка
            Расширение = НРег(Прав(ВыбранныйФайл, 4));
            
            Если Расширение = ".txt" Тогда
                Данные = ЗагрузитьИзTXT(ВыбранныйФайл);
                ОбработатьДанныеНаСервере(Данные);
            КонецЕсли;
        Исключение
            Сообщить("Ошибка: " + ОписаниеОшибки());
        КонецПопытки;
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ЗагрузитьИзTXT(Путь)
    ЧтениеТекста = Новый ЧтениеТекста(Путь);
    Данные = ЧтениеТекста.Прочитать();
    ЧтениеТекста.Закрыть();
    Возврат Данные;
КонецФункции

&НаСервере
Процедура ОбработатьДанныеНаСервере(Данные)
    Строки = СтрРазделить(Данные, Символы.ПС);
    ПропуститьЗаголовок = Истина; // Флаг для пропуска заголовка
    
    Для Сч = 0 По Строки.Количество() - 1 Цикл
        Строка = Строки[Сч];
        
        // Пропускаем заголовок
        Если ПропуститьЗаголовок Тогда
            ПропуститьЗаголовок = Ложь;
            Продолжить;
        КонецЕсли;
        
        // Пропускаем пустые строки
        Если Строка = "" ИЛИ СтрЗаменить(Строка, " ", "") = "" Тогда
            Продолжить;
        КонецЕсли;
        
        // Разделяем строку на колонки
        Колонки = СтрРазделить(Строка, ";");
        
        // Проверяем, что строка содержит ровно 5 колонок
        Если Колонки.Количество() = 5 Тогда
            Попытка
                // Получаем ссылку на номенклатуру
                НаименованиеНоменклатуры = СокрЛП(Колонки[0]);
                Номенклатура = Справочники.НоменклатураСПР.НайтиПоНаименованию(НаименованиеНоменклатуры);
                
                Если Номенклатура = Неопределено Тогда
                    Номенклатура = Справочники.НоменклатураСПР.СоздатьЭлемент();
                    Номенклатура.Наименование = НаименованиеНоменклатуры;
                    Номенклатура.Записать();
                КонецЕсли;
                
                // Получаем ссылку на единицу измерения
                НаименованиеЕдиницыИзмерения = СокрЛП(Колонки[1]);
                ЕдиницаИзмерения = Справочники.ЕдиницыИзмерения.НайтиПоНаименованию(НаименованиеЕдиницыИзмерения);
                
                Если ЕдиницаИзмерения = Неопределено Тогда
                    ЕдиницаИзмерения = Справочники.ЕдиницыИзмерения.СоздатьЭлемент();
                    ЕдиницаИзмерения.Наименование = НаименованиеЕдиницыИзмерения;
                    ЕдиницаИзмерения.Записать();
                КонецЕсли;
                
                // Проверка и преобразование числовых значений
                Попытка
                    Количество = Число(СокрЛП(Колонки[2]));
                Исключение
                    Сообщить("Ошибка: значение 'Количество' не является числом в строке: " + Строка);
                    Продолжить;
                КонецПопытки;
                
                Попытка
                    Цена = Число(СокрЛП(Колонки[3]));
                Исключение
                    Сообщить("Ошибка: значение 'Цена' не является числом в строке: " + Строка);
                    Продолжить;
                КонецПопытки;
                
                Попытка
                    Сумма = Число(СокрЛП(Колонки[4]));
                Исключение
                    Сообщить("Ошибка: значение 'Сумма' не является числом в строке: " + Строка);
                    Продолжить;
                КонецПопытки;
                
                // Создаем новую строку в табличной части
                НоваяСтрока = Объект.Поставка.Добавить();
                
                // Заполняем поля
                НоваяСтрока.Номенклатура = Номенклатура;
                НоваяСтрока.ЕдиницаИзмерения = ЕдиницаИзмерения;
                НоваяСтрока.Количество = Количество;
                НоваяСтрока.Цена = Цена;
                НоваяСтрока.Сумма = Сумма;
            Исключение
                Сообщить("Ошибка при обработке строки: " + Строка + ". Ошибка: " + ОписаниеОшибки());
                Продолжить;
            КонецПопытки;
        Иначе
            Сообщить("Ошибка формата: строка содержит " + Колонки.Количество() + " колонок вместо 5: " + Строка);
        КонецЕсли;
    КонецЦикла;
    
    Сообщить("Данные успешно загружены!");
КонецПроцедуры

&НаКлиенте
Процедура ПоставкаСуммаПриИзменении(Элемент)
	СТЧ = Элементы.Поставка.ТекущиеДанные;
	СТЧ.Цена = СТЧ.Сумма / СТЧ.Количество;
КонецПроцедуры
