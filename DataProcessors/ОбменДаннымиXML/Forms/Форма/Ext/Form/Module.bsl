#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ВыгрузитьВXML(Команда)
    #Если МобильноеПриложениеКлиент Тогда
        ВременныйФайл = ПолучитьИмяВременногоФайла("xml");
        ВыгрузитьДанныеВXMLНаСервере(ВременныйФайл);
        Сообщить("Файл выгружен: " + ВременныйФайл, СтатусСообщения.Важное);
    #Иначе
        Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
        Диалог.Заголовок = "Сохранить XML-файл";
        Диалог.Фильтр = "XML-файлы (*.xml)|*.xml";
        Диалог.ПолноеИмяФайла = "Выгрузка_" + СтрЗаменить(Формат(ТекущаяДата(), "ДФ=yyyy-MM-dd_HH-mm-ss"), " ", "_") + ".xml";
        
        Если Диалог.Выбрать() Тогда
            ВыгрузитьДанныеВXMLНаСервере(Диалог.ПолноеИмяФайла);
            Сообщить("Файл успешно выгружен: " + Диалог.ПолноеИмяФайла);
        КонецЕсли;
    #КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзXML(Команда)
    #Если МобильноеПриложениеКлиент Тогда
        // Для мобильного приложения используем стандартный диалог выбора файла
        Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
        Диалог.Заголовок = "Выберите XML-файл";
        Диалог.Фильтр = "XML-файлы (*.xml)|*.xml";
        
        Если Диалог.Выбрать() Тогда
            Попытка
                // Создаем временный файл для обработки
                ВременныйФайл = ПолучитьИмяВременногоФайла("xml");
                ДвоичныеДанные = Новый ДвоичныеДанные(Диалог.ПолноеИмяФайла);
                ДвоичныеДанные.Записать(ВременныйФайл);
                
                // Загружаем данные из временного файла
                ЗагрузитьДанныеИзXMLНаСервере(ВременныйФайл);
                
                // Удаляем временный файл
                УдалитьФайлы(ВременныйФайл);
            Исключение
                Сообщить("Ошибка при обработке файла: " + ОписаниеОшибки(), СтатусСообщения.Важное);
            КонецПопытки;
        КонецЕсли;
    #Иначе
        // Стандартный выбор файла для десктопа
        Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
        Диалог.Заголовок = "Выберите XML-файл";
        Диалог.Фильтр = "XML-файлы (*.xml)|*.xml";
        
        Если Диалог.Выбрать() Тогда
            ЗагрузитьДанныеИзXMLНаСервере(Диалог.ПолноеИмяФайла);
        КонецЕсли;
    #КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикВыбораФайла(РезультатВыбора, ДополнительныеПараметры) Экспорт
    Если РезультатВыбора.Выбран Тогда
        Попытка
            // Альтернативный способ для мобильных устройств
            ЧтениеФайла = Новый ЧтениеТекста(РезультатВыбора.ИмяФайла, "UTF-8");
            СодержимоеФайла = ЧтениеФайла.Прочитать();
            ЧтениеФайла.Закрыть();
            
            ВременныйФайл = ПолучитьИмяВременногоФайла("xml");
            ЗаписьФайла = Новый ЗаписьТекста(ВременныйФайл, "UTF-8");
            ЗаписьФайла.Записать(СодержимоеФайла);
            ЗаписьФайла.Закрыть();
            
            ЗагрузитьДанныеИзXMLНаСервере(ВременныйФайл);
            УдалитьФайлы(ВременныйФайл);
        Исключение
            Сообщить("Ошибка при загрузке файла: " + ОписаниеОшибки(), СтатусСообщения.Важное);
        КонецПопытки;
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаПути(РезультатВвода, ДополнительныеПараметры) Экспорт
    Если РезультатВвода = Неопределено Тогда
        Возврат;
    КонецЕсли;
    
    ПутьФайла = РезультатВвода.ВведенноеЗначение;
    Если Не ПустаяСтрока(ПутьФайла) Тогда
        Попытка
            ВременныйФайл = ПолучитьИмяВременногоФайла("xml");
            ДвоичныеДанные = Новый ДвоичныеДанные(ПутьФайла);
            ДвоичныеДанные.Записать(ВременныйФайл);
            ЗагрузитьДанныеИзXMLНаСервере(ВременныйФайл);
            УдалитьФайлы(ВременныйФайл);
        Исключение
            Сообщить("Ошибка: " + ОписаниеОшибки(), СтатусСообщения.Важное);
        КонецПопытки;
    КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СерверныеПроцедуры

&НаСервере
Процедура ВыгрузитьДанныеВXMLНаСервере(ПутьФайла) Экспорт
    Попытка
        ЗаписьXML = Новый ЗаписьXML;
        ЗаписьXML.ОткрытьФайл(ПутьФайла);
        ЗаписьXML.ЗаписатьОбъявлениеXML();
        ЗаписьXML.ЗаписатьНачалоЭлемента("Данные");
        
        МассивСправочников = ПолучитьСправочникиДляВыгрузки();
        Для Каждого Справочник Из МассивСправочников Цикл
            ВыгрузитьСправочник(ЗаписьXML, Справочник);
        КонецЦикла;
        
        ЗаписьXML.ЗаписатьКонецЭлемента();
        ЗаписьXML.Закрыть();
    Исключение
        Сообщить("Ошибка выгрузки: " + ОписаниеОшибки(), СтатусСообщения.Важное);
    КонецПопытки;
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанныеИзXMLНаСервере(ПутьФайла) Экспорт
    Попытка
        ЧтениеXML = Новый ЧтениеXML;
        ЧтениеXML.ОткрытьФайл(ПутьФайла);
        
        МассивСправочников = ПолучитьСправочникиДляВыгрузки();
        
        Пока ЧтениеXML.Прочитать() Цикл
            Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
                ИмяЭлемента = ЧтениеXML.Имя;
                Если МассивСправочников.Найти(ИмяЭлемента) <> Неопределено Тогда
                    ОбработатьУзелXML(ЧтениеXML, ИмяЭлемента);
                КонецЕсли;
            КонецЕсли;
        КонецЦикла;
        
        ЧтениеXML.Закрыть();
        Сообщить("Данные загружены успешно!");
    Исключение
        Сообщить("Ошибка загрузки: " + ОписаниеОшибки(), СтатусСообщения.Важное);
    КонецПопытки;
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьСправочник(ЗаписьXML, ИмяСправочника)
    ЗаписьXML.ЗаписатьНачалоЭлемента(ИмяСправочника);
    
    Запрос = Новый Запрос(ПолучитьТекстЗапроса(ИмяСправочника));
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    
    Пока Выборка.Следующий() Цикл
        ЗаписьXML.ЗаписатьНачалоЭлемента("Элемент");
        ЗаписатьАтрибутыЭлемента(ЗаписьXML, Выборка, ИмяСправочника);
        ЗаписьXML.ЗаписатьКонецЭлемента();
    КонецЦикла;
    
    ЗаписьXML.ЗаписатьКонецЭлемента();
КонецПроцедуры

&НаСервере
Процедура ОбработатьУзелXML(ЧтениеXML, ИмяСправочника)
    Пока ЧтениеXML.Прочитать() И ЧтениеXML.Имя <> ИмяСправочника Цикл
        Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента И ЧтениеXML.Имя = "Элемент" Тогда
            ЗагрузитьЭлементСправочника(ЧтениеXML, ИмяСправочника);
        КонецЕсли;
    КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьЭлементСправочника(ЧтениеXML, ИмяСправочника)
    Код = ЧтениеXML.ПолучитьАтрибут("Код");
    Наименование = ЧтениеXML.ПолучитьАтрибут("Наименование");
    
    Элемент = НайтиИлиСоздатьЭлемент(ИмяСправочника, Код, Наименование);
    
    Если ИмяСправочника = "НоменклатураСПР" Тогда
        Элемент.ВидНоменклатуры = ПолучитьСсылку("ВидыНоменклатуры", ЧтениеXML.ПолучитьАтрибут("ВидНоменклатуры"));
        Элемент.ЕдиницаИзмерения = ПолучитьСсылку("ЕдиницыИзмерения", ЧтениеXML.ПолучитьАтрибут("ЕдиницаИзмерения"));
        Элемент.ТоварнаяГруппа = ПолучитьСсылку("ТоварныеГруппы", ЧтениеXML.ПолучитьАтрибут("ТоварнаяГруппа"));
    ИначеЕсли ИмяСправочника = "Магазины" Тогда
        Элемент.СкладПоступления = ПолучитьСсылку("Склады", ЧтениеXML.ПолучитьАтрибут("СкладПоступления"));
        Элемент.СкладПродажи = ПолучитьСсылку("Склады", ЧтениеXML.ПолучитьАтрибут("СкладПродажи"));
    КонецЕсли;
    
    Элемент.Записать();
КонецПроцедуры

#КонецОбласти

#Область ВспомогательныеМетоды

&НаСервере
Функция ПолучитьСправочникиДляВыгрузки()
    Массив = Новый Массив;
    Массив.Добавить("ЕдиницыИзмерения");
    Массив.Добавить("ВидыНоменклатуры");
    Массив.Добавить("ТоварныеГруппы");
    Массив.Добавить("Склады");
    Массив.Добавить("НоменклатураСПР");
    Массив.Добавить("Магазины");
    Возврат Массив;
КонецФункции

&НаСервере
Функция ПолучитьТекстЗапроса(ИмяСправочника)
    Текст = "ВЫБРАТЬ 
    |    Справочник.Код КАК КодСправочника, 
    |    Справочник.Наименование КАК НаименованиеСправочника";
    
    Если ИмяСправочника = "НоменклатураСПР" Тогда
        Текст = Текст + ",
        |    ВЫБОР КОГДА Справочник.ВидНоменклатуры ЕСТЬ NULL ТОГДА NULL ИНАЧЕ Справочник.ВидНоменклатуры.Код КОНЕЦ КАК ВидНоменклатурыКод,
        |    ВЫБОР КОГДА Справочник.ЕдиницаИзмерения ЕСТЬ NULL ТОГДА NULL ИНАЧЕ Справочник.ЕдиницаИзмерения.Код КОНЕЦ КАК ЕдиницаИзмеренияКод,
        |    ВЫБОР КОГДА Справочник.ТоварнаяГруппа ЕСТЬ NULL ТОГДА NULL ИНАЧЕ Справочник.ТоварнаяГруппа.Код КОНЕЦ КАК ТоварнаяГруппаКод";
    ИначеЕсли ИмяСправочника = "Магазины" Тогда
        Текст = Текст + ",
        |    ВЫБОР КОГДА Справочник.СкладПоступления ЕСТЬ NULL ТОГДА NULL ИНАЧЕ Справочник.СкладПоступления.Код КОНЕЦ КАК СкладПоступленияКод,
        |    ВЫБОР КОГДА Справочник.СкладПродажи ЕСТЬ NULL ТОГДА NULL ИНАЧЕ Справочник.СкладПродажи.Код КОНЕЦ КАК СкладПродажиКод";
    КонецЕсли;
    
    Текст = Текст + "
    |ИЗ 
    |    Справочник." + ИмяСправочника + " КАК Справочник";
    
    Возврат Текст;
КонецФункции

&НаСервере
Процедура ЗаписатьАтрибутыЭлемента(ЗаписьXML, Выборка, ИмяСправочника)
    // Преобразуем все значения к строковому типу перед записью
    ЗаписьXML.ЗаписатьАтрибут("Код", Строка(Выборка.КодСправочника));
    ЗаписьXML.ЗаписатьАтрибут("Наименование", Строка(Выборка.НаименованиеСправочника));
    
    Если ИмяСправочника = "НоменклатураСПР" Тогда
        ЗаписьXML.ЗаписатьАтрибут("ВидНоменклатуры", 
            ?(Выборка.ВидНоменклатурыКод = Неопределено, "", Строка(Выборка.ВидНоменклатурыКод)));
        ЗаписьXML.ЗаписатьАтрибут("ЕдиницаИзмерения", 
            ?(Выборка.ЕдиницаИзмеренияКод = Неопределено, "", Строка(Выборка.ЕдиницаИзмеренияКод)));
        ЗаписьXML.ЗаписатьАтрибут("ТоварнаяГруппа", 
            ?(Выборка.ТоварнаяГруппаКод = Неопределено, "", Строка(Выборка.ТоварнаяГруппаКод)));
    ИначеЕсли ИмяСправочника = "Магазины" Тогда
        ЗаписьXML.ЗаписатьАтрибут("СкладПоступления", 
            ?(Выборка.СкладПоступленияКод = Неопределено, "", Строка(Выборка.СкладПоступленияКод)));
        ЗаписьXML.ЗаписатьАтрибут("СкладПродажи", 
            ?(Выборка.СкладПродажиКод = Неопределено, "", Строка(Выборка.СкладПродажиКод)));
    КонецЕсли;
КонецПроцедуры

&НаСервере
Функция НайтиИлиСоздатьЭлемент(ИмяСправочника, Код, Наименование)
    Запрос = Новый Запрос("ВЫБРАТЬ Ссылка ИЗ Справочник." + ИмяСправочника + " ГДЕ Код = &Код");
    Запрос.УстановитьПараметр("Код", Код);
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    
    Если Выборка.Следующий() Тогда
        // Получаем объект существующего элемента
        Элемент = Выборка.Ссылка.ПолучитьОбъект();
        Если Элемент <> Неопределено Тогда
            Элемент.Наименование = Наименование;
            Возврат Элемент;
        КонецЕсли;
    КонецЕсли;
    
    // Создаем новый элемент
    НовыйЭлемент = Справочники[ИмяСправочника].СоздатьЭлемент();
    НовыйЭлемент.Код = Код;
    НовыйЭлемент.Наименование = Наименование;
    Возврат НовыйЭлемент;
КонецФункции

&НаСервере
Функция ПолучитьСсылку(ИмяСправочника, Код)
    Если ПустаяСтрока(Код) Тогда
        Возврат Неопределено;
    КонецЕсли;
    
    Запрос = Новый Запрос("ВЫБРАТЬ Ссылка ИЗ Справочник." + ИмяСправочника + " ГДЕ Код = &Код");
    Запрос.УстановитьПараметр("Код", Код);
    Результат = Запрос.Выполнить();
    
    Если Результат.Пустой() Тогда
        Возврат Справочники[ИмяСправочника].СоздатьЭлемент(Код, "Новый " + ИмяСправочника).Ссылка;
    Иначе
        Возврат Результат.Выбрать().Ссылка;
    КонецЕсли;
КонецФункции

#КонецОбласти