&НаКлиенте
Процедура Штрихкоды(Команда)
    ТекущаяСсылка = Элементы.Список.ТекущиеДанные;
    Если ТекущаяСсылка = Неопределено Тогда
        Предупреждение("Выберите элемент номенклатуры!");
        Возврат;
    КонецЕсли;
    
    ПараметрыФормы = Новый Структура;
    ПараметрыФормы.Вставить("НоменклатураСПР", ТекущаяСсылка);
    ОткрытьФорму("РегистрСведений.Штрихкоды.ФормаСписка", ПараметрыФормы);
КонецПроцедуры

&НаКлиенте
Процедура Выгрузить(Команда)
    // Формируем данные
    ТекстДляВыгрузки = СформироватьТекстДляВыгрузкиНаСервере();
    
    // Создаем диалог выбора файла
    Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
    Диалог.Заголовок = "Сохранить файл";
    Диалог.Фильтр = "Текстовые файлы (*.txt)|*.txt";
    
    // Устанавливаем имя файла по умолчанию
    ИмяФайлаПоУмолчанию = "Выгрузка_номенклатуры.txt";
    Диалог.ПолноеИмяФайла = ИмяФайлаПоУмолчанию;
    
    Если Диалог.Выбрать() Тогда
        ВыбранныйФайл = Диалог.ПолноеИмяФайла;
        
        Попытка
            // Определяем формат по расширению
            Расширение = нРег(Прав(ВыбранныйФайл, 4));
            
            Если Расширение = ".txt" Тогда
                СохранитьВTXT(ВыбранныйФайл, ТекстДляВыгрузки);
            КонецЕсли;
            
            Сообщить("Файл сохранен: " + ВыбранныйФайл);
        Исключение
            Сообщить("Ошибка: " + ОписаниеОшибки());
        КонецПопытки;
    КонецЕсли;
КонецПроцедуры

Функция СформироватьТекстДляВыгрузкиНаСервере()
    // Получаем данные из справочника НоменклатураСПР
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |    НоменклатураСПР.Наименование КАК Наименование,
        |    НоменклатураСПР.ВидНоменклатуры КАК ВидНоменклатуры,
        |    НоменклатураСПР.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
        |    НоменклатураСПР.ТоварнаяГруппа КАК ТоварнаяГруппа
        |ИЗ
        |    Справочник.НоменклатураСПР КАК НоменклатураСПР";
    
    РезультатЗапроса = Запрос.Выполнить();
    
    Если РезультатЗапроса.Пустой() Тогда
        Возврат "";
    КонецЕсли;
    
    // Формируем заголовки
    Заголовки = "Наименование;ВидНоменклатуры;ЕдиницаИзмерения;ТоварнаяГруппа";
    Результат = Заголовки + Символы.ПС;
    
    // Формируем строки данных
    Выборка = РезультатЗапроса.Выбрать();
    Пока Выборка.Следующий() Цикл
        Результат = Результат + 
            Строка(Выборка.Наименование) + ";" +
            Строка(Выборка.ВидНоменклатуры) + ";" +
            Строка(Выборка.ЕдиницаИзмерения) + ";" +
            Строка(Выборка.ТоварнаяГруппа) + Символы.ПС;
    КонецЦикла;
    
    Возврат Результат;
КонецФункции

&НаКлиенте
Процедура СохранитьВTXT(Путь, Данные)
    ЗаписьТекста = Новый ЗаписьТекста(Путь);
    ЗаписьТекста.ЗаписатьСтроку(Данные);
    ЗаписьТекста.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
    Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
    Диалог.Заголовок = "Выберите файл для загрузки";
    Диалог.Фильтр = "Текстовые файлы (*.txt)|*.txt";
    
    Если Диалог.Выбрать() Тогда
        ВыбранныйФайл = Диалог.ПолноеИмяФайла;
        
        Попытка
            Расширение = нРег(Прав(ВыбранныйФайл, 4));
            
            Если Расширение = ".txt" Тогда
                Данные = ЗагрузитьИзTXT(ВыбранныйФайл);
                ОбработатьДанныеНаСервере(Данные);
            КонецЕсли;
        Исключение
            Сообщить("Ошибка: " + ОписаниеОшибки());
        КонецПопытки;
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ЗагрузитьИзTXT(Путь)
    ЧтениеТекста = Новый ЧтениеТекста(Путь);
    Данные = ЧтениеТекста.Прочитать();
    ЧтениеТекста.Закрыть();
    Возврат Данные;
КонецФункции

&НаСервере
Процедура ОбработатьДанныеНаСервере(Данные)
    Строки = СтрРазделить(Данные, Символы.ПС);
    ПропуститьЗаголовок = Истина; // Пропуск первой строки (заголовок)
    
    Для Каждого Строка Из Строки Цикл
        Если ПропуститьЗаголовок Тогда
            ПропуститьЗаголовок = Ложь;
            Продолжить;
        КонецЕсли;
        
        Если Строка = "" Тогда
            Продолжить;
        КонецЕсли;
        
        Колонки = СтрРазделить(Строка, ";");
        
        Если Колонки.Количество() < 5 Тогда
            Сообщить("Ошибка формата: " + Строка);
            Продолжить;
        КонецЕсли;
        
        Попытка
            Код              = СокрЛП(Колонки[0]);
            Наименование     = СокрЛП(Колонки[1]);
            ЕдиницаНаимен    = СокрЛП(Колонки[2]);
            ВидНаимен        = СокрЛП(Колонки[3]);
            ГруппаНаимен     = СокрЛП(Колонки[4]);
            
            // Поиск элемента по коду через запрос
            Запрос = Новый Запрос;
            Запрос.Текст = 
                "ВЫБРАТЬ 
                |    Ссылка 
                |ИЗ 
                |    Справочник.НоменклатураСПР КАК Номенклатура 
                |ГДЕ 
                |    Номенклатура.Код = &Код";
            Запрос.УстановитьПараметр("Код", Код);
            Результат = Запрос.Выполнить();
            Выборка = Результат.Выбрать();
            
            Если Выборка.Следующий() Тогда
                СсылкаНоменклатуры = Выборка.Ссылка;
                ОбъектНоменклатуры = СсылкаНоменклатуры.ПолучитьОбъект();
                Сообщить("Обновлен существующий элемент: " + Код);
            Иначе
                ОбъектНоменклатуры = Справочники.НоменклатураСПР.СоздатьЭлемент();
                ОбъектНоменклатуры.Код = Код;
                Сообщить("Создан новый элемент: " + Код);
            КонецЕсли;
            
            // Заполнение реквизитов
            ОбъектНоменклатуры.Наименование = Наименование;
            
            // Обработка единицы измерения
            Если ЕдиницаНаимен <> "" Тогда
                ЕдиницаСсылка = НайтиИлиСоздатьЭлементСправочника("ЕдиницыИзмерения", ЕдиницаНаимен);
                ОбъектНоменклатуры.ЕдиницаИзмерения = ЕдиницаСсылка;
            КонецЕсли;
            
            // Обработка вида номенклатуры
            Если ВидНаимен <> "" Тогда
                ВидСсылка = НайтиИлиСоздатьЭлементСправочника("ВидыНоменклатуры", ВидНаимен);
                ОбъектНоменклатуры.ВидНоменклатуры = ВидСсылка;
            КонецЕсли;
            
            // Обработка товарной группы
            Если ГруппаНаимен <> "" Тогда
                ГруппаСсылка = НайтиИлиСоздатьЭлементСправочника("ТоварныеГруппы", ГруппаНаимен);
                ОбъектНоменклатуры.ТоварнаяГруппа = ГруппаСсылка;
            КонецЕсли;
            
            // Сохранение изменений
            ОбъектНоменклатуры.Записать();
            Сообщить("Сохранено: " + Код);
            
        Исключение
            Сообщить("Ошибка в строке: " + Строка + " | " + ОписаниеОшибки());
        КонецПопытки;
    КонецЦикла;
КонецПроцедуры

&НаСервере
Функция НайтиИлиСоздатьЭлементСправочника(ИмяСправочника, Наименование)
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ 
        |    Ссылка 
        |ИЗ 
        |    Справочник." + ИмяСправочника + " КАК Элемент 
        |ГДЕ 
        |    Элемент.Наименование = &Наименование";
    Запрос.УстановитьПараметр("Наименование", Наименование);
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    
    Если Выборка.Следующий() Тогда
        Возврат Выборка.Ссылка;
    Иначе
        НовыйЭлемент = Справочники[ИмяСправочника].СоздатьЭлемент();
        НовыйЭлемент.Наименование = Наименование;
        НовыйЭлемент.Записать();
        Возврат НовыйЭлемент.Ссылка;
    КонецЕсли;
КонецФункции